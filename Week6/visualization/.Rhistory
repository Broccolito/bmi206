library(Matrix)
library(Rtsne)
library(ggplot2)
#read in the genes-by-cells read count matrix sc.mat
load("visualization.RData")
View(sc.df)
sc.mat[1:3,1:3]
summary(sc.mat[grep("APOL2",rownames(sc.mat)),])
summary(sc.mat[,1])
sc.mat.expr=sc.mat[which(rowSums(sc.mat>0) > 10),]
nrow(sc.mat.expr)
library(Matrix)
library(Rtsne)
library(ggplot2)
#read in the genes-by-cells read count matrix sc.mat
load("visualization.RData")
#take a look at a few rows and columsn of the (sparse) matrix
sc.mat[1:3,1:3]
#how many cells?
ncol(sc.mat) #3478
#how many genes?
nrow(sc.mat) #32,738
summary(sc.mat[,1])
#summary of counts for the APOL2 gene
summary(sc.mat[grep("APOL2",rownames(sc.mat)),])
sc.mat.expr=sc.mat[which(rowSums(sc.mat>0) > 10),]
#how many genes retained?
nrow(sc.mat.expr) #8,900
n.umis=median(colSums(sc.mat.expr))
sc.mat.norm=log2(t(t(sc.mat.expr)*n.umis/colSums(sc.mat.expr)) + 1)
#visualize distribution of normalized expression values for first cell
hist(sc.mat.norm[,1])
hist(sc.mat.norm[1,])
pcs=prcomp(t(sc.mat.norm), rank.=30)
ggplot(sc.df, aes(x=pc1, y=pc2, colour=cell.type)) + geom_point()
tsne=Rtsne(pcs$x)
ggplot(sc.df, aes(x=tsne1, y=tsne2, colour=cell.type)) + geom_point()
? prcomp
sc.df[1:2,]
names(tsne)
length(sc.df$pc1)
length(pcs$x[,1])
summary(sc.df$pc1)
summary(pcs$x[,1])
sc.df$pc1=pcs$x[,1]
sc.df$pc2=pcs$x[,2]
dim(tsne$Y)
tsne$Y[1:2,]
? Rtsne
summary(tsne$Y[,1])
summary(sc.df$tsne1)
summary(sc.df$tsne2)
summary(tsne$Y[,2])
sc.df$tsne1=tsne$Y[,1]
sc.df$tsne2=tsne$Y[,2]
ggplot(sc.df, aes(x=tsne1, y=tsne2, colour=cell.type)) + geom_point()
ggplot(sc.df, aes(x=pc1, y=pc2, colour=cell.type)) + geom_point()
ls()
save.image("visualization.RData")
